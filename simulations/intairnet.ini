[General]
description = Two hosts communicating wirelessly
network = IntAirNet
sim-time-limit = 1800s

####################################################################################################
########################           Data Traffic Applications       #################################
####################################################################################################
### Aircrafts Mobility Model, Ground Station Coordinates and Scenario Manager 
#*.numAircrafts = 0 
*.numGroundStations = 1
**.groundStation[*].mobility.typename = "BonnMotionMobility"
**.groundStation[*].mobility.traceFile = "NATselB_2019_data/groundstations.txt"
**.groundStation[*].mobility.is3D = true
**.groundStation[*].mobility.nodeId = -1

**.aircraft[*].mobility.constraintAreaMinX = 0m
**.aircraft[*].mobility.constraintAreaMaxX = 7316840000.7432410577m
**.aircraft[*].mobility.constraintAreaMinY = 0m
**.aircraft[*].mobility.constraintAreaMaxY = 188350000.341593755526m
**.aircraft[*].mobility.constraintAreaMinZ = 0m
**.aircraft[*].mobility.constraintAreaMaxZ = 3706730000.1492535734m
**.aircraft[*].mobility.typename = "BonnMotionMobility"
**.aircraft[*].mobility.traceFile = "NATselB_2019_data/NATselB_2019_mobility.txt"
**.aircraft[*].mobility.is3D = true
**.aircraft[*].mobility.nodeId = -1

# scenario manager that turns on/off aircraft based on their startTime and stopTime 
*.scenarioManager.script = xmldoc("NATselB_2019_data/NATselB_2019_scenarioManager.xml")

*.aircraft[*].numApps = 1
*.aircraft[*].app[0].typename = "UdpBasicApp"
*.aircraft[*].app[0].destAddresses = "groundStation[0]"
*.aircraft[*].app[0].destPort = 5000
*.aircraft[*].app[0].messageLength = 1000B
*.aircraft[*].app[0].sendInterval = 2s
*.aircraft[*].app[0].packetName = "UDPData"

*.groundStation[0].numApps = 1
*.groundStation[0].app[0].typename = "UdpSink"
*.groundStation[0].app[0].localPort = 5000


### NIC Settings

**.configurator.typename = "HostAutoConfigurator"
*.aircraft[*].numEthInterfaces = 1
*.aircraft[*].*.configurator.interfaces = "wlan0 eth0"
*.groundStation[*].*.configurator.interfaces = "eth0"
**.hasStatus = true

**.ipv4.arp.typename = "GlobalArp"
**.**.bitrate = 100Mbps

**.wlan[0].radio.transmitter.communicationRange = 370400m
**.wlan[0].radio.receiver.ignoreInterference = true
**.wlan[*].radio.transmitter.interferenceRange = 0m
**.wlan[*].radio.transmitter.detectionRange = 377000m

**.netmaskRoutes = ""
*.configurator.addStaticRoutes = false

# TDMA-like MAC
**.wlan[*].typename = "TdmaInterface"
**.slotDuration= 2ms
**.frameLength = 10
**.wlan[*].mac.headerLength = 23B
**.wlan[*].mac.ackTimeout= 1.99ms
**.rlc.typename = "DummyRlc"

### Routing 
*.*.routing.typename = "GpsrModified"
*.*.routing.beaconInterval = 25s
*.*.routing.neighborValidityInterval = 62.5s
*.*.routing.groundStationRange = 370400m
*.*.routing.GSx = 4734222.285m 
*.*.routing.GSy = 1381949.583m
*.*.routing.GSz = 662813.2938m

#*.*.routing.typename = "Gpsr"
#*.*.routing.beaconInterval = 25s
#*.*.routing.neighborValidityInterval = 62.5s
