//
// Generated file, do not edit! Created by nedtool 5.6 from MultiLinkPacketTag.msg.
//

#ifndef __INET_MULTILINKPACKETTAG_M_H
#define __INET_MULTILINKPACKETTAG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class MultiLinkPacketTag;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/TagBase_m.h" // import inet.common.TagBase

#include "inet/common/Units_m.h" // import inet.common.Units


namespace inet {

/**
 * Class generated from <tt>MultiLinkPacketTag.msg:12</tt> by nedtool.
 * <pre>
 * class MultiLinkPacketTag extends TagBase
 * {
 *     bool isSatcom;
 * }
 * </pre>
 */
class MultiLinkPacketTag : public ::inet::TagBase
{
  protected:
    bool isSatcom_ = false;

  private:
    void copy(const MultiLinkPacketTag& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MultiLinkPacketTag&);

  public:
    MultiLinkPacketTag();
    MultiLinkPacketTag(const MultiLinkPacketTag& other);
    virtual ~MultiLinkPacketTag();
    MultiLinkPacketTag& operator=(const MultiLinkPacketTag& other);
    virtual MultiLinkPacketTag *dup() const override {return new MultiLinkPacketTag(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool isSatcom() const;
    virtual void setIsSatcom(bool isSatcom);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const MultiLinkPacketTag& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, MultiLinkPacketTag& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_MULTILINKPACKETTAG_M_H

